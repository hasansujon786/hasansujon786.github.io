---
import CallToAction from '@/components/widgets/CallToAction'
import Footer from '@/components/widgets/Footer'
import Header from '@/components/widgets/Header'
import Hero from '@/components/widgets/Hero'
import Layout from '@/layouts/Layout.astro'
import MyStack from '@/components/widgets/MyStack'
import Navbar from '@/components/widgets/Navbar'
import PageLoader from '@/components/widgets/PageLoader'
import ProjectShowcase from '@/components/widgets/ProjectShowcase'
---

<Layout>
  <PageLoader />
  <Header />
  <Navbar />
  <main class='overflow-hidden'>
    <Hero />
    <MyStack />
    <ProjectShowcase />
    <CallToAction />
    <Footer />
  </main>
</Layout>

<script>
  const options: IntersectionObserverInit = {
    threshold: 0.5, //50% of the element in view
  }
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate-on-scroll-enter')
        observer.unobserve(entry.target)
      }
    })
  }, options)

  const handleAnimationEnd = (loader: Element | null) => {
    // Run entrance animation
    document.querySelectorAll('.animate-on-load').forEach((el) => el.classList.add('animate-on-load-enter'))

    // Set IntersectionObserver for Animate-on-scroll
    document.querySelectorAll('.animate-on-scroll').forEach((el) => {
      // Get stagger delay
      const staggerValue = el.getAttribute('data-stagger')
      const delay = staggerValue !== null ? Number(staggerValue) : 100

      el.querySelectorAll('.stagger').forEach((child, i) => {
        child.style.transitionDelay = `${delay * i}ms`
      })

      observer.observe(el)
    })

    loader?.remove()
  }

  const setScrolled = (didScrolled: boolean) => {
    const header = document.getElementById('header')
    if (!header) return

    if (didScrolled) {
      header.classList.add('border-b', 'shadow-xl')
    } else {
      header.classList.remove('border-b', 'shadow-xl')
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const loader = document.querySelector('.page-loader')

    // Start entrance animation immediately if no loader is found
    if (!loader) {
      return handleAnimationEnd(null)
    }
    // Wait for loader animation to end then start entrance animation
    loader.addEventListener('animationend', () => handleAnimationEnd(loader))

    // Run page-loader exit animation
    loader.classList.add('page-loader-exit')

    // Run header shadow animation
    setScrolled(window.scrollY >= 30)
    window.addEventListener('scroll', () => setScrolled(window.scrollY >= 30))
  })
</script>
